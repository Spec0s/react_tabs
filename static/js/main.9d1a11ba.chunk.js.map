{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","activeTab","className","map","tab","cn","id","href","onClick","handleClick","title","content","App","useState","setSelectedTabId","find","tabData","ReactDOM","render","document","getElementById"],"mappings":"kNAgBaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,UAQA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GAAG,OACX,oBAEE,UAAQ,MACRF,UAAWG,IAAG,CACZ,YAAaN,IAAkBK,EAAIE,KAJvC,SAOE,mBACEC,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,kBArBH,SAACJ,GACfL,IAAkBK,EAAIE,IACxBN,EAAcI,GAmBWK,CAAYL,IAH7B,SAKGA,EAAIM,SAXFN,EAAIE,WAkBjB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QC/CIH,EAAO,CAClB,CAAEQ,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGQ,IAA3D,mBAAOP,EAAP,KAAsBe,EAAtB,KAEMb,EAAYH,EAAKiB,MAAK,SAAAX,GAAG,OAAIA,EAAIE,KAAOP,MAAkBD,EAAK,GAMrE,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAUS,SAEhC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAZgB,SAACgB,GACrBF,EAAiBE,EAAQV,KAYrBL,UAAWA,EAAUU,cC3B7BM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9d1a11ba.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nexport interface TabsType {\n  id: string;\n  title: string;\n  content: string;\n}\n\ntype Props = {\n  tabs: TabsType[];\n  selectedTabId: string;\n  onTabSelected: (tab: TabsType) => void;\n  activeTab: string;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n  activeTab,\n}) => {\n  const handleClick = (tab: TabsType) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={cn({\n                'is-active': selectedTabId === tab.id,\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {activeTab}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs, TabsType } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const activeTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const onTabSelected = (tabData: TabsType):void => {\n    setSelectedTabId(tabData.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${activeTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n        activeTab={activeTab.content}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}